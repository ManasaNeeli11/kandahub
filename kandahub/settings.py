"""
Django settings for kandahub project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'dev-secret-key')

LOGIN_URL = '/login/'  # or wherever your login view is

DEBUG = os.getenv('DEBUG', 'False').lower() == 'true'


# Allowed hosts
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'kandahub.onrender.com']

if not DEBUG:
    ALLOWED_HOSTS.append('kandahub.onrender.com')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'subhub.apps.SubhubConfig',

]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # 1
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 2
    'django.contrib.messages.middleware.MessageMiddleware',      # 3
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'




ROOT_URLCONF = 'kandahub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kandahub.wsgi.application'




DEBUG = os.getenv("DEBUG", "False") == "True"

# âœ” DATABASES: Handles both dev and production

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'kandahub_db',
        'USER': 'kandahub_user',
        'PASSWORD': 'Manasa@11_5711',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Secure cookies for production (HTTPS)
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True


DEBUG=True

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]  # This tells Django where your dev static files live
STATIC_ROOT = BASE_DIR / "staticfiles"    # For production (collectstatic)

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"




# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

print("MIDDLEWARE list:", MIDDLEWARE)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,  # Keep existing Django loggers active
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'ERROR',  # Log only errors (not DEBUG or INFO)
    },
}

